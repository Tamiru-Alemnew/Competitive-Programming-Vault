class Solution:
    def findCircleNum(self, isConnected: List[List[int]]) -> int:
        graph = defaultdict(list)
        n = len(isConnected)
        
        for i in range(n):
            for j in range(i+1,n):
                if isConnected[i][j]==1:
                    graph[i].append(j)
                    graph[j].append(i)
        
        visit = [False]*n
        
        def dfs(current_city):
            visit[current_city] = True

            for direct in graph[current_city]:
                if visit[direct] == False:
                    visit[direct] = True
                    dfs(direct)
        
        number_of_provinces = 0
        for current_city in range(n):
            if visit[current_city] == False:
                number_of_provinces += 1
                dfs(current_city)
        
        return number_of_provinces

             