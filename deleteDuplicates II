# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head or not head.next:
            return head
        
        # Handle duplicates at the beginning of the list
        while head and head.next and head.val == head.next.val:
            while head.next and head.val == head.next.val:
                head = head.next
            head = head.next
        
        current = head
        prev = None
        
        while current and current.next:
            if current.val == current.next.val:
                while current.next and current.val == current.next.val:
                    current = current.next
                if prev:
                    prev.next = current.next
                else:
                    head = current.next
            else:
                prev = current
            current = current.next
        
        return head

